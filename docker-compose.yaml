version: '3.9'

services:

    nginx-proxy:
        image: nginxproxy/nginx-proxy:alpine
        container_name: pdf-reverse-proxy-nginx
        restart: unless-stopped
        environment:
            - HTTPS_METHOD=noredirect
        volumes:
            - ${DOCKER_SOCK_ROOTLESS_PATH:-/var/run/docker.sock}:/tmp/docker.sock:ro
            - ${NGINX_FILES_PATH:-./nginx}/conf.d:/etc/nginx/conf.d
            - ${NGINX_FILES_PATH:-./nginx}/nginx.conf:/etc/nginx/nginx.conf
        ports:
            - "80:80"
        networks:
            - proxy

    amqproxy:
        image: cloudamqp/amqproxy
        container_name: ${CONTAINER_NAME:-unnamed}-rabbitmq-proxy
        environment:
            - AMQP_URL=amqp://rabbitmq:5672
        depends_on:
            rabbitmq:
                condition: service_healthy
        ports:
            - "5673:5673"
        networks:
            - rabbitmq
    
    rabbitmq:
        build:
            context: ./rabbitmq
        container_name: ${CONTAINER_NAME:-unnamed}-rabbitmq
        environment:
            - RABBITMQ_DEFAULT_USER=guest
            - RABBITMQ_DEFAULT_PASS=guest
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:15672" ]
            interval: 5s
            timeout: 10s
            retries: 5
        ports:
            - "5672:5672"
            - "15672:15672"
        networks:
            - rabbitmq
    
    centrifugo:
        container_name: ${CONTAINER_NAME:-unnamed}-centrifugo
        image: centrifugo/centrifugo:v5
        volumes:
            - ./centrifugo/config.json:/centrifugo/config.json
        command: centrifugo -c config.json
        ports:
            - "8000:8000"
        networks:
            - centrifugo
    
    postgres:
        container_name: ${CONTAINER_NAME:-unnamed}-postgres
        image: postgres:16-alpine
        restart: always
        volumes:
            - ./postgres/data:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}
            - POSTGRES_DB=${DB_NAME}
            - TZ=Europe/Moscow
            - PGTZ=Europe/Moscow
        ports:
            - "5432:5432"
        networks:
            - postgres
    
    minio:
        image: minio/minio
        ports:
            - "9005:9000"
            - "9001:9001"
        volumes:
            - ./minio/data:/data
        environment:
            MINIO_ROOT_USER: user
            MINIO_ROOT_PASSWORD: password
        command: server --console-address ":9001" /data
        networks:
            - minio

networks:
    proxy:
        driver: bridge
        name: docker_engine_reverse_proxy
        
    rabbitmq:
        driver: bridge
        name: pdf_api_rabbitmq
    
    centrifugo:
        driver: bridge
        name: pdf_api_centrifugo
    
    postgres:
        driver: bridge
        name: pdf_api_postgres
    
    minio:
        driver: bridge
        name: pdf_api_minio
